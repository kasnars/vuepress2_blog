import{_ as a,c as l,a as n,o as e}from"./app--JmYYJmN.js";const i={};function t(c,s){return e(),l("div",null,s[0]||(s[0]=[n(`<h2 id="html相关" tabindex="-1"><a class="header-anchor" href="#html相关"><span>HTML相关</span></a></h2><h3 id="html语义化的意义" tabindex="-1"><a class="header-anchor" href="#html语义化的意义"><span>HTML语义化的意义</span></a></h3><details class="custom-container details"><summary class="custom-container-title">答案</summary><ul><li>让人更容易读懂，增加代码的可读性，提升合作效率</li><li>让机器更容易读懂，利于SEO优化，无障碍阅读等功能</li></ul></details><h3 id="块状元素和内联元素有哪些" tabindex="-1"><a class="header-anchor" href="#块状元素和内联元素有哪些"><span>块状元素和内联元素有哪些</span></a></h3><details class="custom-container details"><summary class="custom-container-title">答案</summary><ul><li>块状： display:block;display:table;div,h1,table,ul,ol,p</li><li>内联： display:inline;display:inline-block;span,img,input,button</li></ul></details><h2 id="css相关" tabindex="-1"><a class="header-anchor" href="#css相关"><span>CSS相关</span></a></h2><h3 id="盒模型宽度计算" tabindex="-1"><a class="header-anchor" href="#盒模型宽度计算"><span>盒模型宽度计算</span></a></h3><details class="custom-container details"><summary class="custom-container-title">答案</summary><ul><li>offsetWidth = (内容宽度+内边距+边框)【无外边框】</li></ul></details><h3 id="margin纵向重叠是什么" tabindex="-1"><a class="header-anchor" href="#margin纵向重叠是什么"><span>margin纵向重叠是什么</span></a></h3><details class="custom-container details"><summary class="custom-container-title">答案</summary><ul><li>相邻的margin-top和margin-bottom会重叠，中间的空标签也会被重叠（塌陷）</li></ul></details><h3 id="margin各个方向的负值有什么效果" tabindex="-1"><a class="header-anchor" href="#margin各个方向的负值有什么效果"><span>margin各个方向的负值有什么效果</span></a></h3><details class="custom-container details"><summary class="custom-container-title">答案</summary><ul><li>top，left为负值时，元素分别向上和左移动</li><li>right为负时，右侧元素往左移动（右侧元素向自身靠近）</li><li>bottom为负时，下方元素上移（下方元素向自身靠近）</li></ul></details><h3 id="什么是bfc" tabindex="-1"><a class="header-anchor" href="#什么是bfc"><span>什么是BFC</span></a></h3><details class="custom-container details"><summary class="custom-container-title">答案</summary><ul><li>块级格式化上下文</li><li>一块独立渲染须臾，内部元素的渲染不会影响边界外元素</li></ul></details><h3 id="形成bfc条件" tabindex="-1"><a class="header-anchor" href="#形成bfc条件"><span>形成BFC条件</span></a></h3><details class="custom-container details"><summary class="custom-container-title">答案</summary><ul><li>设置float（不为none）</li><li>postion为absolute或fixed</li><li>overflow不是visable</li><li>displ为felx或者line-block等</li></ul></details><h3 id="如何利用bfc清除浮动" tabindex="-1"><a class="header-anchor" href="#如何利用bfc清除浮动"><span>如何利用BFC清除浮动</span></a></h3><details class="custom-container details"><summary class="custom-container-title">答案</summary><ul><li>overflow：hidden</li></ul></details><h3 id="圣杯布局与双飞翼布局" tabindex="-1"><a class="header-anchor" href="#圣杯布局与双飞翼布局"><span>圣杯布局与双飞翼布局</span></a></h3><details class="custom-container details"><summary class="custom-container-title">答案</summary><ul><li>三栏布局，两侧内容固定，中间内容自适应</li><li>用于PC布局</li><li>实现方法</li></ul><div class="language-css line-numbers-mode" data-highlighter="prismjs" data-ext="css" data-title="css"><pre><code><span class="line">float，position：absolute，flex，table，grid</span>
<span class="line"><span class="token comment">/* 思路： float：1.两侧margin可以用负值2.防止中间的内容重叠一个padding一个margin */</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div></details><h3 id="手写clearfix" tabindex="-1"><a class="header-anchor" href="#手写clearfix"><span>手写clearfix</span></a></h3><details class="custom-container details"><summary class="custom-container-title">答案</summary><div class="language-css line-numbers-mode" data-highlighter="prismjs" data-ext="css" data-title="css"><pre><code><span class="line"><span class="token selector">.clearfix::after</span><span class="token punctuation">{</span></span>
<span class="line">    <span class="token property">content</span><span class="token punctuation">:</span><span class="token string">&#39;&#39;</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token property">display</span><span class="token punctuation">:</span>table<span class="token punctuation">;</span></span>
<span class="line">    <span class="token property">clear</span><span class="token punctuation">:</span>both<span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></details><h3 id="flex常用属性" tabindex="-1"><a class="header-anchor" href="#flex常用属性"><span>flex常用属性</span></a></h3><details class="custom-container details"><summary class="custom-container-title">答案</summary><div class="language-css line-numbers-mode" data-highlighter="prismjs" data-ext="css" data-title="css"><pre><code><span class="line"><span class="token selector">div</span><span class="token punctuation">{</span> </span>
<span class="line">    <span class="token comment">/* 主轴对齐方向 */</span></span>
<span class="line">    flex-direction </span>
<span class="line">    <span class="token comment">/* 主轴对齐方式x */</span></span>
<span class="line">    justify-content</span>
<span class="line">    <span class="token comment">/* 交叉轴对齐方式y */</span></span>
<span class="line">    align-item</span>
<span class="line">    <span class="token comment">/* 换行 */</span></span>
<span class="line">    flex-wary</span>
<span class="line">    <span class="token comment">/* 子元素基于自身对齐 */</span></span>
<span class="line">    align-flex</span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></details><h3 id="基于flex实现一个三点骰子" tabindex="-1"><a class="header-anchor" href="#基于flex实现一个三点骰子"><span>基于flex实现一个三点骰子</span></a></h3><details class="custom-container details"><summary class="custom-container-title">答案</summary><div class="language-css line-numbers-mode" data-highlighter="prismjs" data-ext="css" data-title="css"><pre><code><span class="line"><span class="token selector">.box</span><span class="token punctuation">{</span></span>
<span class="line">    <span class="token property">display</span><span class="token punctuation">:</span>flex<span class="token punctuation">;</span></span>
<span class="line">    <span class="token property">justify-content</span><span class="token punctuation">:</span>space-between<span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"><span class="token selector">.item:nth-child(2)</span><span class="token punctuation">{</span></span>
<span class="line">    <span class="token property">align-self</span><span class="token punctuation">:</span>center<span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"><span class="token selector">.item:nth-child(3)</span><span class="token punctuation">{</span></span>
<span class="line">    <span class="token property">align-self</span><span class="token punctuation">:</span>flex-end<span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></details><h3 id="absolute和relative定位之间的区别" tabindex="-1"><a class="header-anchor" href="#absolute和relative定位之间的区别"><span>absolute和relative定位之间的区别</span></a></h3><details class="custom-container details"><summary class="custom-container-title">答案</summary><ul><li>relative是根据自身来定位</li><li>absolute是根据最近一层的定位元素定位（父元素往上找有absolute，relative，fixed的元素，没有的话直接找body）</li></ul></details><h3 id="实现居中对齐" tabindex="-1"><a class="header-anchor" href="#实现居中对齐"><span>实现居中对齐</span></a></h3><details class="custom-container details"><summary class="custom-container-title">答案</summary><ul><li>inline元素： text-align:center</li><li>block元素: margin:0 auto</li><li>absolute:left50%；margin-left:负值</li></ul></details><h3 id="实现垂直居中" tabindex="-1"><a class="header-anchor" href="#实现垂直居中"><span>实现垂直居中</span></a></h3><details class="custom-container details"><summary class="custom-container-title">答案</summary><ul><li>inline元素： line-height = 自身的height</li><li>absolute: <ol><li>top;50%+margin-top负值</li><li>transfrom(-50%,-50%)</li><li>top,bottom,left,right都为0的时候：margin:auto</li></ol></li></ul></details><h3 id="line-height继承逻辑" tabindex="-1"><a class="header-anchor" href="#line-height继承逻辑"><span>line-height继承逻辑</span></a></h3><details class="custom-container details"><summary class="custom-container-title">答案</summary><ul><li>具体数值直接继承</li><li>写比例则继承比例（1/2）</li><li>百分比情况下继承百分比计算后的值</li></ul></details><h3 id="rem是什么" tabindex="-1"><a class="header-anchor" href="#rem是什么"><span>rem是什么</span></a></h3><details class="custom-container details"><summary class="custom-container-title">答案</summary><ul><li>相对于根元素（html）的大小单位（em是相对于夫元素）</li></ul></details><h3 id="响应式常见方案" tabindex="-1"><a class="header-anchor" href="#响应式常见方案"><span>响应式常见方案</span></a></h3><details class="custom-container details"><summary class="custom-container-title">答案</summary><ul><li>media-query: 根据不同屏幕去设置html里的font-size</li></ul></details><h3 id="vh-vw是什么-相比rem有什么优势" tabindex="-1"><a class="header-anchor" href="#vh-vw是什么-相比rem有什么优势"><span>vh，vw是什么，相比rem有什么优势</span></a></h3><details class="custom-container details"><summary class="custom-container-title">答案</summary><ul><li>rem的弊端： 具有阶梯型，需要一级一级设置</li><li>1vw为网页视口宽度的1/100</li><li>1vh为网页视口宽度的1/100</li><li>vmax取两者的最大值，vmin取两者最小值</li><li>window.innerHeight = 100vh</li></ul></details><h3 id="网页视口尺寸是什么" tabindex="-1"><a class="header-anchor" href="#网页视口尺寸是什么"><span>网页视口尺寸是什么</span></a></h3><details class="custom-container details"><summary class="custom-container-title">答案</summary><ul><li>屏幕高度：window.screen.height</li><li>网页视口: window.innerHeight</li><li>body高度: document.body.clientHeight</li></ul></details>`,42)]))}const d=a(i,[["render",t],["__file","htmlcss.html.vue"]]),o=JSON.parse('{"path":"/docs/knowledge/htmlcss.html","title":"HTML+CSS知识点总结","lang":"en-US","frontmatter":{"title":"HTML+CSS知识点总结","date":"2024-03-12T00:00:00.000Z","tags":["HTML","CSS","面经"],"categories":["前端总结"]},"headers":[{"level":2,"title":"HTML相关","slug":"html相关","link":"#html相关","children":[{"level":3,"title":"HTML语义化的意义","slug":"html语义化的意义","link":"#html语义化的意义","children":[]},{"level":3,"title":"块状元素和内联元素有哪些","slug":"块状元素和内联元素有哪些","link":"#块状元素和内联元素有哪些","children":[]}]},{"level":2,"title":"CSS相关","slug":"css相关","link":"#css相关","children":[{"level":3,"title":"盒模型宽度计算","slug":"盒模型宽度计算","link":"#盒模型宽度计算","children":[]},{"level":3,"title":"margin纵向重叠是什么","slug":"margin纵向重叠是什么","link":"#margin纵向重叠是什么","children":[]},{"level":3,"title":"margin各个方向的负值有什么效果","slug":"margin各个方向的负值有什么效果","link":"#margin各个方向的负值有什么效果","children":[]},{"level":3,"title":"什么是BFC","slug":"什么是bfc","link":"#什么是bfc","children":[]},{"level":3,"title":"形成BFC条件","slug":"形成bfc条件","link":"#形成bfc条件","children":[]},{"level":3,"title":"如何利用BFC清除浮动","slug":"如何利用bfc清除浮动","link":"#如何利用bfc清除浮动","children":[]},{"level":3,"title":"圣杯布局与双飞翼布局","slug":"圣杯布局与双飞翼布局","link":"#圣杯布局与双飞翼布局","children":[]},{"level":3,"title":"手写clearfix","slug":"手写clearfix","link":"#手写clearfix","children":[]},{"level":3,"title":"flex常用属性","slug":"flex常用属性","link":"#flex常用属性","children":[]},{"level":3,"title":"基于flex实现一个三点骰子","slug":"基于flex实现一个三点骰子","link":"#基于flex实现一个三点骰子","children":[]},{"level":3,"title":"absolute和relative定位之间的区别","slug":"absolute和relative定位之间的区别","link":"#absolute和relative定位之间的区别","children":[]},{"level":3,"title":"实现居中对齐","slug":"实现居中对齐","link":"#实现居中对齐","children":[]},{"level":3,"title":"实现垂直居中","slug":"实现垂直居中","link":"#实现垂直居中","children":[]},{"level":3,"title":"line-height继承逻辑","slug":"line-height继承逻辑","link":"#line-height继承逻辑","children":[]},{"level":3,"title":"rem是什么","slug":"rem是什么","link":"#rem是什么","children":[]},{"level":3,"title":"响应式常见方案","slug":"响应式常见方案","link":"#响应式常见方案","children":[]},{"level":3,"title":"vh，vw是什么，相比rem有什么优势","slug":"vh-vw是什么-相比rem有什么优势","link":"#vh-vw是什么-相比rem有什么优势","children":[]},{"level":3,"title":"网页视口尺寸是什么","slug":"网页视口尺寸是什么","link":"#网页视口尺寸是什么","children":[]}]}],"git":{},"filePathRelative":"docs/knowledge/htmlcss.md"}');export{d as comp,o as data};
